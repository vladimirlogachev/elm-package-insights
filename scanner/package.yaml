name:                scanner
version:             0.1.0.0
github:              "githubuser/scanner"
license:             BSD-3-Clause
author:              "Author name here"
maintainer:          "example@example.com"
copyright:           "2024 Author name here"

# Complete list: https://ghc.gitlab.haskell.org/ghc/doc/users_guide/exts/control.html
language: GHC2021

default-extensions:
  #
  # Note on Monomorphism Restriction:
  # - Essence: restricts polymorphism for ALL definitions,
  #   for which no type signatures are specified and which do not "look like functions" (have no binding to the left of = )
  # - Inconvenience: Leads to non-intuitive type inference results - less polymorphic than expected
  # - Convenience: increases performance and reduces memory usage
  #   More details: https://www.youtube.com/watch?v=zpBua3Mql18
  # - Present in the Haskell specification, not just GHC
  # - Disabled by default in GHC 9.4 (via NoMonomorphismRestriction)
  # - But enabled by default in the GHC2021 extension set (via MonomorphismRestriction)
  # - Instead of disabling monomorphism restriction with `NoMonomorphismRestriction`,
  #   we use the enabled `Wmonomorphism-restriction` warning (enabled in `Weverything`),
  #   and warning forces us to place type signatures where monomorphism restriction applies.
  #   And in the process of specifying types, we decide whether to leave polymorphism or a specific type there,
  #   and the behavior will always be as expected.
  #
  - NoImplicitPrelude # Note: For Relude
  - NoPolyKinds # Note: Breaks Elm instances for parameterized types. And we didn't really need you, RolyPolyKinds
  - DataKinds
  - DeriveAnyClass
  - DerivingStrategies
  - DerivingVia
  - DuplicateRecordFields
  - LambdaCase
  - OverloadedRecordDot
  - OverloadedStrings

ghc-options:
  # Use up to 8 cores for compilation https://ghc.gitlab.haskell.org/ghc/doc/users_guide/using.html?highlight=j#ghc-flag--j[%E2%9F%A8n%E2%9F%A9]
  - -j8
    # Set up rts options for GHC itself https://ghc.gitlab.haskell.org/ghc/doc/users_guide/runtime_control.html#setting-rts-options
  - +RTS -A32m -RTS
    # Optimization level:
    # -O0 produces a non-optimized binary (significantly reduces Seq performance), but builds fast.
    # -O2 produces a heavily optimized binary, but builds ~ 2 times slower.
    # Note: Stack reuses existing binaries instead of rebuilding if the source code hasn't changed.
    # We build optimized binaries by default and turn optimizations off by `--fast` flag.
  - -O2
    # Enables local documentation
  - -haddock
    # Enable all possible warnings as errors (Werror is provided manually in dockerfile for production builds and CI)
  - -Weverything
    # Complains about imported functions
  - -Wno-all-missed-specialisations
    # Complains about imported functions
  - -Wno-missed-specialisations
    # Requires signatures for all local definitions
  - -Wno-missing-local-signatures
    # Requires explicitly list exports for all modules
  - -Wno-missing-export-lists
    # Requires to mark unsafe modules as unsafe
  - -Wno-unsafe
    # Requires separate lists of dependencies per executable. But can really catch some unused packages.
  - -Wno-unused-packages
    # Requires kind signature for every newtype.
  - -Wno-missing-kind-signatures
    # A lot of modules modules are still not "safe haskell".
  - -Wno-missing-safe-haskell-mode
    # Requires import lists for all record fields and all value constructors
  - -Wno-missing-import-lists

dependencies:
- base >= 4.7 && < 5
- relude # an alternative to Prelude


library:
  source-dirs: src

executables:
  scanner-exe:
    main:                Main.hs
    source-dirs:         app
    ghc-options:
    - -threaded
    - -rtsopts
    - -with-rtsopts=-N
    dependencies:
    - scanner

tests:
  scanner-test:
    main:                Spec.hs
    source-dirs:         test
    ghc-options:
    - -threaded
    - -rtsopts
    - -with-rtsopts=-N
    dependencies:
    - scanner
